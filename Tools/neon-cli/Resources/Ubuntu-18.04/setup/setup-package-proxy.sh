#!/bin/bash
#------------------------------------------------------------------------------
# FILE:         setup-package-proxy.sh
# CONTRIBUTOR:  Jeff Lill
# COPYRIGHT:    Copyright (c) 2016-2019 by neonFORGE, LLC.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and

# Have this node use the APT package cache server if one was specified.

# Configure Bash strict mode so that the entire script will fail if 
# any of the commands fail.
#
#       http://redsymbol.net/articles/unofficial-bash-strict-mode/
#
# NOTE: I'm not using [-u] here to avoid failing for undefined
#       environment variables because some won't be initialized
#       when prepping nodes without a cluster cluster definition.

set -eo pipefail

echo
echo "**********************************************" 1>&2
echo "** SETUP-PACKAGE-PROXY                      **" 1>&2
echo "**********************************************" 1>&2

# Load the cluster configuration and setup utilities.

. $<load-cluster-conf>
. setup-utility.sh

# Install the [apt-cacher-ng] service on master nodes.

if [ "${NEON_NODE_ROLE}" == "master" ] ; then

	set -eou pipefail	# Enable full failure detection

	safe-apt-get update
	safe-apt-get install -yq apt-cacher-ng

	# Configure the cache to pass-thru SSL requests
	# and then restart.

	echo "PassThroughPattern:^.*:443$" >> /etc/apt-cacher-ng/acng.conf
	systemctl restart apt-cacher-ng

	set -eo pipefail	# Revert back to partial failure detection

	# Give the proxy service a chance to start.

	sleep 5
fi

# Configure APT proxy selection.

echo ${NEON_PACKAGE_PROXY} > ${NEON_CONFIG_FOLDER}/package-proxy

cat <<EOF > /usr/local/bin/get-package-proxy
#!/bin/bash
#------------------------------------------------------------------------------
# FILE:        get-package-proxy
# CONTRIBUTOR: Generated by [neon-cli] during cluster setup.
#
# This script determine which (if any) configured APT proxy caches are running
# and returns its endpoint or "DIRECT" if none of the proxies are available and 
# the distribution's mirror should be accessed directly.  This uses the
# [${NEON_CONFIG_FOLDER}/package-proxy] file to obtain the list of proxies.
#
# This is called when the following is specified in the APT configuration,
# as we do further below:
#
#		Acquire::http::Proxy-Auto-Detect "/usr/local/bin/get-package-proxy";
#
# See this link for more information:
#
#		https://trent.utfs.org/wiki/Apt-get#Failover_Proxy

NEON_PACKAGE_PROXY=$(cat ${NEON_CONFIG_FOLDER}/package-proxy)

if [ "\${NEON_PACKAGE_PROXY}" == "" ] ; then
    echo DIRECT
    exit 0
fi

for proxy in ${NEON_PACKAGE_PROXY}; do
	if nc -w1 -z \${proxy/:/ }; then
		echo http://\${proxy}/
		exit 0
	fi
done

echo DIRECT
exit 0
EOF

chmod 775 /usr/local/bin/get-package-proxy

cat <<EOF > /etc/apt/apt.conf
//-----------------------------------------------------------------------------
// FILE:        /etc/apt/apt.conf
// CONTRIBUTOR: Generated by [neon-cli] during cluster setup.
//
// This file configures APT on the local machine to proxy requests through the
// [apt-cacher-ng] instance(s) at the endpoints specified by \${NEON_PACKAGE_PROXY}.
// This uses the [/usr/local/bin/get-package-proxy] script to select a working PROXY
// if there are more than one, or to go directly to the package mirror if none
// of the proxies are available.
//
// Presumably, this cache is running on the local network which can dramatically
// reduce external network traffic to the APT mirrors and improve cluster setup 
// and update performance.

Acquire::http::Proxy-Auto-Detect "/usr/local/bin/get-package-proxy";
EOF
